{"ast":null,"code":"export const streamChunk=function*(chunk,chunkSize){let len=chunk.byteLength;if(!chunkSize||len<chunkSize){yield chunk;return;}let pos=0;let end;while(pos<len){end=pos+chunkSize;yield chunk.slice(pos,end);pos=end;}};export const readBytes=async function*(iterable,chunkSize){for await(const chunk of readStream(iterable)){yield*streamChunk(chunk,chunkSize);}};const readStream=async function*(stream){if(stream[Symbol.asyncIterator]){yield*stream;return;}const reader=stream.getReader();try{for(;;){const{done,value}=await reader.read();if(done){break;}yield value;}}finally{await reader.cancel();}};export const trackStream=(stream,chunkSize,onProgress,onFinish)=>{const iterator=readBytes(stream,chunkSize);let bytes=0;let done;let _onFinish=e=>{if(!done){done=true;onFinish&&onFinish(e);}};return new ReadableStream({async pull(controller){try{const{done,value}=await iterator.next();if(done){_onFinish();controller.close();return;}let len=value.byteLength;if(onProgress){let loadedBytes=bytes+=len;onProgress(loadedBytes);}controller.enqueue(new Uint8Array(value));}catch(err){_onFinish(err);throw err;}},cancel(reason){_onFinish(reason);return iterator.return();}},{highWaterMark:2});};","map":{"version":3,"names":["streamChunk","chunk","chunkSize","len","byteLength","pos","end","slice","readBytes","iterable","readStream","stream","Symbol","asyncIterator","reader","getReader","done","value","read","cancel","trackStream","onProgress","onFinish","iterator","bytes","_onFinish","e","ReadableStream","pull","controller","next","close","loadedBytes","enqueue","Uint8Array","err","reason","return","highWaterMark"],"sources":["C:/Users/oscar/Downloads/project (5)/src/node_modules/axios/lib/helpers/trackStream.js"],"sourcesContent":["\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}