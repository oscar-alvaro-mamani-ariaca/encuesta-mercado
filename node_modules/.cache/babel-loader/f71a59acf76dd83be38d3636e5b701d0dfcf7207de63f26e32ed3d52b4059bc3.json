{"ast":null,"code":"import{useState,useEffect}from'react';function usePageInView(){const[isInView,setIsInView]=useState(true);useEffect(()=>{const handleVisibilityChange=()=>setIsInView(!document.hidden);if(document.hidden){handleVisibilityChange();}document.addEventListener(\"visibilitychange\",handleVisibilityChange);return()=>{document.removeEventListener(\"visibilitychange\",handleVisibilityChange);};},[]);return isInView;}export{usePageInView};","map":{"version":3,"names":["useState","useEffect","usePageInView","isInView","setIsInView","handleVisibilityChange","document","hidden","addEventListener","removeEventListener"],"sources":["C:/Users/oscar/Downloads/project (5)/src/node_modules/framer-motion/dist/es/utils/use-page-in-view.mjs"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction usePageInView() {\n    const [isInView, setIsInView] = useState(true);\n    useEffect(() => {\n        const handleVisibilityChange = () => setIsInView(!document.hidden);\n        if (document.hidden) {\n            handleVisibilityChange();\n        }\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n        return () => {\n            document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n        };\n    }, []);\n    return isInView;\n}\n\nexport { usePageInView };\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CAC9CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAI,sBAAsB,CAAGA,CAAA,GAAMD,WAAW,CAAC,CAACE,QAAQ,CAACC,MAAM,CAAC,CAClE,GAAID,QAAQ,CAACC,MAAM,CAAE,CACjBF,sBAAsB,CAAC,CAAC,CAC5B,CACAC,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,CAAEH,sBAAsB,CAAC,CACrE,MAAO,IAAM,CACTC,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,CAAEJ,sBAAsB,CAAC,CAC5E,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAAAF,QAAQ,CACnB,CAEA,OAASD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}