{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nfunction copyRawValuesOnly(target, source, props) {\n  for (const key in source) {\n    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n      target[key] = source[key];\n    }\n  }\n}\nfunction useInitialMotionValues({\n  transformTemplate\n}, visualState) {\n  _s();\n  return useMemo(() => {\n    const state = createHtmlRenderState();\n    buildHTMLStyles(state, visualState, transformTemplate);\n    return Object.assign({}, state.vars, state.style);\n  }, [visualState]);\n}\n_s(useInitialMotionValues, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nfunction useStyle(props, visualState) {\n  _s2();\n  const styleProp = props.style || {};\n  const style = {};\n  /**\n   * Copy non-Motion Values straight into style\n   */\n  copyRawValuesOnly(style, styleProp, props);\n  Object.assign(style, useInitialMotionValues(props, visualState));\n  return style;\n}\n_s2(useStyle, \"/Sy6LYzJ66EazRcvQe1ceKYmJ6M=\", false, function () {\n  return [useInitialMotionValues];\n});\nfunction useHTMLProps(props, visualState) {\n  _s3();\n  // The `any` isn't ideal but it is the type of createElement props argument\n  const htmlProps = {};\n  const style = useStyle(props, visualState);\n  if (props.drag && props.dragListener !== false) {\n    // Disable the ghost element when a user drags\n    htmlProps.draggable = false;\n    // Disable text selection\n    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = \"none\";\n    // Disable scrolling on the draggable direction\n    style.touchAction = props.drag === true ? \"none\" : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n  }\n  if (props.tabIndex === undefined && (props.onTap || props.onTapStart || props.whileTap)) {\n    htmlProps.tabIndex = 0;\n  }\n  htmlProps.style = style;\n  return htmlProps;\n}\n_s3(useHTMLProps, \"WJWu2yDa0dJ2LCrqC4EY4AJkLTI=\", false, function () {\n  return [useStyle];\n});\nexport { copyRawValuesOnly, useHTMLProps };","map":{"version":3,"names":["isMotionValue","useMemo","isForcedMotionValue","buildHTMLStyles","createHtmlRenderState","copyRawValuesOnly","target","source","props","key","useInitialMotionValues","transformTemplate","visualState","_s","state","Object","assign","vars","style","useStyle","_s2","styleProp","useHTMLProps","_s3","htmlProps","drag","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","undefined","onTap","onTapStart","whileTap"],"sources":["C:/Users/oscar/Downloads/project (5)/src/node_modules/framer-motion/dist/es/render/html/use-props.mjs"],"sourcesContent":["import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,YAAY;AAC1C,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,QAAQ,+CAA+C;AACnF,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,qBAAqB,QAAQ,iCAAiC;AAEvE,SAASC,iBAAiBA,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAC9C,KAAK,MAAMC,GAAG,IAAIF,MAAM,EAAE;IACtB,IAAI,CAACP,aAAa,CAACO,MAAM,CAACE,GAAG,CAAC,CAAC,IAAI,CAACP,mBAAmB,CAACO,GAAG,EAAED,KAAK,CAAC,EAAE;MACjEF,MAAM,CAACG,GAAG,CAAC,GAAGF,MAAM,CAACE,GAAG,CAAC;IAC7B;EACJ;AACJ;AACA,SAASC,sBAAsBA,CAAC;EAAEC;AAAkB,CAAC,EAAEC,WAAW,EAAE;EAAAC,EAAA;EAChE,OAAOZ,OAAO,CAAC,MAAM;IACjB,MAAMa,KAAK,GAAGV,qBAAqB,CAAC,CAAC;IACrCD,eAAe,CAACW,KAAK,EAAEF,WAAW,EAAED,iBAAiB,CAAC;IACtD,OAAOI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,KAAK,CAACG,IAAI,EAAEH,KAAK,CAACI,KAAK,CAAC;EACrD,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;AACrB;AAACC,EAAA,CANQH,sBAAsB;AAO/B,SAASS,QAAQA,CAACX,KAAK,EAAEI,WAAW,EAAE;EAAAQ,GAAA;EAClC,MAAMC,SAAS,GAAGb,KAAK,CAACU,KAAK,IAAI,CAAC,CAAC;EACnC,MAAMA,KAAK,GAAG,CAAC,CAAC;EAChB;AACJ;AACA;EACIb,iBAAiB,CAACa,KAAK,EAAEG,SAAS,EAAEb,KAAK,CAAC;EAC1CO,MAAM,CAACC,MAAM,CAACE,KAAK,EAAER,sBAAsB,CAACF,KAAK,EAAEI,WAAW,CAAC,CAAC;EAChE,OAAOM,KAAK;AAChB;AAACE,GAAA,CATQD,QAAQ;EAAA,QAOQT,sBAAsB;AAAA;AAG/C,SAASY,YAAYA,CAACd,KAAK,EAAEI,WAAW,EAAE;EAAAW,GAAA;EACtC;EACA,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,MAAMN,KAAK,GAAGC,QAAQ,CAACX,KAAK,EAAEI,WAAW,CAAC;EAC1C,IAAIJ,KAAK,CAACiB,IAAI,IAAIjB,KAAK,CAACkB,YAAY,KAAK,KAAK,EAAE;IAC5C;IACAF,SAAS,CAACG,SAAS,GAAG,KAAK;IAC3B;IACAT,KAAK,CAACU,UAAU,GACZV,KAAK,CAACW,gBAAgB,GAClBX,KAAK,CAACY,kBAAkB,GACpB,MAAM;IAClB;IACAZ,KAAK,CAACa,WAAW,GACbvB,KAAK,CAACiB,IAAI,KAAK,IAAI,GACb,MAAM,GACN,OAAOjB,KAAK,CAACiB,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;EACrD;EACA,IAAIjB,KAAK,CAACwB,QAAQ,KAAKC,SAAS,KAC3BzB,KAAK,CAAC0B,KAAK,IAAI1B,KAAK,CAAC2B,UAAU,IAAI3B,KAAK,CAAC4B,QAAQ,CAAC,EAAE;IACrDZ,SAAS,CAACQ,QAAQ,GAAG,CAAC;EAC1B;EACAR,SAAS,CAACN,KAAK,GAAGA,KAAK;EACvB,OAAOM,SAAS;AACpB;AAACD,GAAA,CAxBQD,YAAY;EAAA,QAGHH,QAAQ;AAAA;AAuB1B,SAASd,iBAAiB,EAAEiB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}