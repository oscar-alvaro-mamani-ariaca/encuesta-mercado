{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n  _s();\n  const ref = useRef(null);\n  if (ref.current === null) {\n    ref.current = init();\n  }\n  return ref.current;\n}\n_s(useConstant, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\nexport { useConstant };","map":{"version":3,"names":["useRef","useConstant","init","_s","ref","current"],"sources":["C:/Users/oscar/Downloads/project (5)/src/node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,OAAO;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACvB,MAAMC,GAAG,GAAGJ,MAAM,CAAC,IAAI,CAAC;EACxB,IAAII,GAAG,CAACC,OAAO,KAAK,IAAI,EAAE;IACtBD,GAAG,CAACC,OAAO,GAAGH,IAAI,CAAC,CAAC;EACxB;EACA,OAAOE,GAAG,CAACC,OAAO;AACtB;AAACF,EAAA,CANQF,WAAW;AAQpB,SAASA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}