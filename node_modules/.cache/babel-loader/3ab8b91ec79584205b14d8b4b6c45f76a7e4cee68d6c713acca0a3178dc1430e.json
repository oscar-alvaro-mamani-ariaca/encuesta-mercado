{"ast":null,"code":"\"use client\";import{jsx}from'react/jsx-runtime';import{useState,useRef,useEffect}from'react';import{LazyContext}from'../../context/LazyContext.mjs';import{loadFeatures}from'../../motion/features/load-features.mjs';/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */function LazyMotion(_ref){let{children,features,strict=false}=_ref;const[,setIsLoaded]=useState(!isLazyBundle(features));const loadedRenderer=useRef(undefined);/**\n     * If this is a synchronous load, load features immediately\n     */if(!isLazyBundle(features)){const{renderer,...loadedFeatures}=features;loadedRenderer.current=renderer;loadFeatures(loadedFeatures);}useEffect(()=>{if(isLazyBundle(features)){features().then(_ref2=>{let{renderer,...loadedFeatures}=_ref2;loadFeatures(loadedFeatures);loadedRenderer.current=renderer;setIsLoaded(true);});}},[]);return jsx(LazyContext.Provider,{value:{renderer:loadedRenderer.current,strict},children:children});}function isLazyBundle(features){return typeof features===\"function\";}export{LazyMotion};","map":{"version":3,"names":["jsx","useState","useRef","useEffect","LazyContext","loadFeatures","LazyMotion","_ref","children","features","strict","setIsLoaded","isLazyBundle","loadedRenderer","undefined","renderer","loadedFeatures","current","then","_ref2","Provider","value"],"sources":["C:/Users/oscar/Downloads/project (5)/src/node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children: children }));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n"],"mappings":"AAAA,YAAY,CACZ,OAASA,GAAG,KAAQ,mBAAmB,CACvC,OAASC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CACnD,OAASC,WAAW,KAAQ,+BAA+B,CAC3D,OAASC,YAAY,KAAQ,yCAAyC,CAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAyC,IAAxC,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,MAAM,CAAG,KAAM,CAAC,CAAAH,IAAA,CACtD,KAAM,EAAGI,WAAW,CAAC,CAAGV,QAAQ,CAAC,CAACW,YAAY,CAACH,QAAQ,CAAC,CAAC,CACzD,KAAM,CAAAI,cAAc,CAAGX,MAAM,CAACY,SAAS,CAAC,CACxC;AACJ;AACA,OACI,GAAI,CAACF,YAAY,CAACH,QAAQ,CAAC,CAAE,CACzB,KAAM,CAAEM,QAAQ,CAAE,GAAGC,cAAe,CAAC,CAAGP,QAAQ,CAChDI,cAAc,CAACI,OAAO,CAAGF,QAAQ,CACjCV,YAAY,CAACW,cAAc,CAAC,CAChC,CACAb,SAAS,CAAC,IAAM,CACZ,GAAIS,YAAY,CAACH,QAAQ,CAAC,CAAE,CACxBA,QAAQ,CAAC,CAAC,CAACS,IAAI,CAACC,KAAA,EAAqC,IAApC,CAAEJ,QAAQ,CAAE,GAAGC,cAAe,CAAC,CAAAG,KAAA,CAC5Cd,YAAY,CAACW,cAAc,CAAC,CAC5BH,cAAc,CAACI,OAAO,CAAGF,QAAQ,CACjCJ,WAAW,CAAC,IAAI,CAAC,CACrB,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,EAAE,CAAC,CACN,MAAQ,CAAAX,GAAG,CAACI,WAAW,CAACgB,QAAQ,CAAE,CAAEC,KAAK,CAAE,CAAEN,QAAQ,CAAEF,cAAc,CAACI,OAAO,CAAEP,MAAO,CAAC,CAAEF,QAAQ,CAAEA,QAAS,CAAC,CAAC,CAClH,CACA,QAAS,CAAAI,YAAYA,CAACH,QAAQ,CAAE,CAC5B,MAAO,OAAO,CAAAA,QAAQ,GAAK,UAAU,CACzC,CAEA,OAASH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}