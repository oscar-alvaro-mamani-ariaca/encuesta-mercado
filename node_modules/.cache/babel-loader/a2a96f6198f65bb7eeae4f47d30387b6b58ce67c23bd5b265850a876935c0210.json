{"ast":null,"code":"import{motionValue}from'./index.mjs';import{JSAnimation}from'../animation/JSAnimation.mjs';import{isMotionValue}from'./utils/is-motion-value.mjs';import{frame}from'../frameloop/frame.mjs';/**\n * Create a `MotionValue` that animates to its latest value using a spring.\n * Can either be a value or track another `MotionValue`.\n *\n * ```jsx\n * const x = motionValue(0)\n * const y = transformValue(() => x.get() * 2) // double x\n * ```\n *\n * @param transformer - A transform function. This function must be pure with no side-effects or conditional statements.\n * @returns `MotionValue`\n *\n * @public\n */function springValue(source,options){const initialValue=isMotionValue(source)?source.get():source;const value=motionValue(initialValue);attachSpring(value,source,options);return value;}function attachSpring(value,source,options){const initialValue=value.get();let activeAnimation=null;let latestValue=initialValue;let latestSetter;const unit=typeof initialValue===\"string\"?initialValue.replace(/[\\d.-]/g,\"\"):undefined;const stopAnimation=()=>{if(activeAnimation){activeAnimation.stop();activeAnimation=null;}};const startAnimation=()=>{stopAnimation();activeAnimation=new JSAnimation({keyframes:[asNumber(value.get()),asNumber(latestValue)],velocity:value.getVelocity(),type:\"spring\",restDelta:0.001,restSpeed:0.01,...options,onUpdate:latestSetter});};value.attach((v,set)=>{latestValue=v;latestSetter=latest=>set(parseValue(latest,unit));frame.postRender(startAnimation);return value.get();},stopAnimation);if(isMotionValue(source)){const removeSourceOnChange=source.on(\"change\",v=>value.set(parseValue(v,unit)));const removeValueOnDestroy=value.on(\"destroy\",removeSourceOnChange);return()=>{removeSourceOnChange();removeValueOnDestroy();};}return stopAnimation;}function parseValue(v,unit){return unit?v+unit:v;}function asNumber(v){return typeof v===\"number\"?v:parseFloat(v);}export{attachSpring,springValue};","map":{"version":3,"names":["motionValue","JSAnimation","isMotionValue","frame","springValue","source","options","initialValue","get","value","attachSpring","activeAnimation","latestValue","latestSetter","unit","replace","undefined","stopAnimation","stop","startAnimation","keyframes","asNumber","velocity","getVelocity","type","restDelta","restSpeed","onUpdate","attach","v","set","latest","parseValue","postRender","removeSourceOnChange","on","removeValueOnDestroy","parseFloat"],"sources":["C:/Users/oscar/Downloads/project (5)/src/node_modules/motion-dom/dist/es/value/spring-value.mjs"],"sourcesContent":["import { motionValue } from './index.mjs';\nimport { JSAnimation } from '../animation/JSAnimation.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Create a `MotionValue` that animates to its latest value using a spring.\n * Can either be a value or track another `MotionValue`.\n *\n * ```jsx\n * const x = motionValue(0)\n * const y = transformValue(() => x.get() * 2) // double x\n * ```\n *\n * @param transformer - A transform function. This function must be pure with no side-effects or conditional statements.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction springValue(source, options) {\n    const initialValue = isMotionValue(source) ? source.get() : source;\n    const value = motionValue(initialValue);\n    attachSpring(value, source, options);\n    return value;\n}\nfunction attachSpring(value, source, options) {\n    const initialValue = value.get();\n    let activeAnimation = null;\n    let latestValue = initialValue;\n    let latestSetter;\n    const unit = typeof initialValue === \"string\"\n        ? initialValue.replace(/[\\d.-]/g, \"\")\n        : undefined;\n    const stopAnimation = () => {\n        if (activeAnimation) {\n            activeAnimation.stop();\n            activeAnimation = null;\n        }\n    };\n    const startAnimation = () => {\n        stopAnimation();\n        activeAnimation = new JSAnimation({\n            keyframes: [asNumber(value.get()), asNumber(latestValue)],\n            velocity: value.getVelocity(),\n            type: \"spring\",\n            restDelta: 0.001,\n            restSpeed: 0.01,\n            ...options,\n            onUpdate: latestSetter,\n        });\n    };\n    value.attach((v, set) => {\n        latestValue = v;\n        latestSetter = (latest) => set(parseValue(latest, unit));\n        frame.postRender(startAnimation);\n        return value.get();\n    }, stopAnimation);\n    if (isMotionValue(source)) {\n        const removeSourceOnChange = source.on(\"change\", (v) => value.set(parseValue(v, unit)));\n        const removeValueOnDestroy = value.on(\"destroy\", removeSourceOnChange);\n        return () => {\n            removeSourceOnChange();\n            removeValueOnDestroy();\n        };\n    }\n    return stopAnimation;\n}\nfunction parseValue(v, unit) {\n    return unit ? v + unit : v;\n}\nfunction asNumber(v) {\n    return typeof v === \"number\" ? v : parseFloat(v);\n}\n\nexport { attachSpring, springValue };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}